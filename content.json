[{"title":"学习GIT时遇到的问题","date":"2019-07-18T04:39:00.000Z","path":"2019/07/18/Git/","text":"git百度百科作为最优秀之一的一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。我是在18年接触GitHub时顺带接触到了git的这个东西，当时做的笔记，我把它抄写上来。 命令操作当时的git笔记如下1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950本地库的初始化： git init XXX工作区,暂停区状态查看： git status将工作区的“新建/修改”添加到暂停区： git add 【file name】将暂存区的内容提交到本地库： git commit -m \"日志信息\" 【file name]查看历史纪录 ： git log ； git log --pretty=oneline; git log --oneline ; git reflog版本前进后退： git reset --hard [局部索引值】 git reset --hard HEAD^ 注：一个\"^\"，表示后退一步，多个则表示，后退多步 git reset --hard HEAD~n 注：\"n\" 表示后退n步--soft 参数 :仅仅在本地库移动HEAD指针--mixed参数：在本地库移动HEAD指针，且重置暂存区--hard参数：在本地库移动HEAD指针，重置暂存区，且重置工作区删除文件并找回：（前提是删除前文件存在的状态提交到了本地库）： git reset --hard 【指针位置】比较文件差异：git diff [file name] (将工作区中的文件和暂存区进行比较） git diff (不带文件名比较多个文件）创建分支：git branch [分知名】查看分支：git branch -v切换分支：git checkout [分支名】合并分支：第一步应该切换到被合并的分支上 第二步 git merge [有新内容的分支名】解决冲突：第一步编辑文件删除特殊符号 第二步修改到满意程度保存退出 第三步 git add [file name] 第四步 git commit -m \"日志信息\"（不要带文件名了这里）创建远程库地址别名： git remote -v(查看当前所有远程地址别名) git remote add [远程库别名】【远程地址】推送：git push 【远程库别名】【分支名】 克隆：git clone [远程地址】拉取：pull=fetch+merge git fetch [远程库别名】【远程分支名】 git merge[远程库别名】/【远程分支名】 git pull [远程库别名】【远程分支名】 随记git为识别项目是谁做的哪个部分，需要设置git签名，有项目级别和系统用户级别两种方式（必须设置其中一种） 12345两种都有时项目级别 &gt; 系统级别项目签名可以在 cat ./git/config 查看系统用户签名 cd ~ cat .gitconfig 查看","comments":true,"tags":[]},{"title":"index","date":"2018-07-18T04:29:10.930Z","path":"2018/07/18/index/","text":"","comments":true,"tags":[]}]